import type { NextPage } from 'next'
import * as React from 'react';
import Head from 'next/head'
import Image from 'next/image'
import styles from '../../styles/Home.module.css'
import styled from 'styled-components'
import { width } from '@mui/system';
// import variables from '../../styles/variables.module.scss'
import TextInput from '../../widgets/TextInput'
import Spacer from '../../widgets/Spacer'
import CustomButton from '../../widgets/Button'
import { FaFacebookSquare, FaLinkedin, FaInstagramSquare, FaTwitterSquare } from 'react-icons/fa';
import { FormControl, InputLabel, MenuItem, Select, TextField } from '@mui/material';
import { toast, ToastContainer } from 'react-toastify';
import "react-toastify/dist/ReactToastify.css";

import Dialog from '@mui/material/Dialog';
import DialogActions from '@mui/material/DialogActions';
import DialogContent from '@mui/material/DialogContent';
import DialogContentText from '@mui/material/DialogContentText';
import DialogTitle from '@mui/material/DialogTitle';

// import Box from '@mui/material/Box';
// import Drawer from '@mui/material/Drawer';
import Button from '@mui/material/Button';
import CreateCourseForm from '../../components/Client/Course/CreateCourseForm';
import EditCourseForm from '../../components/Client/Course/EditCourseForm';
import ListCourses from '../../components/Client/Course/ListCourses';
// import List from '@mui/material/List';
// import Divider from '@mui/material/Divider';
// import ListItem from '@mui/material/ListItem';
// import ListItemIcon from '@mui/material/ListItemIcon';
// import ListItemText from '@mui/material/ListItemText';
// import InboxIcon from '@mui/icons-material/MoveToInbox';
// import MailIcon from '@mui/icons-material/Mail';


interface User {
    background?: string;
    height?: string;
    width?: string;
    borderRadius?: string;

}
const CenterWrapper = styled.div(
    ({ height, background, borderRadius }: User) => `
  background: ${background};
  justify-content: center;
  align-items: center;
  display: flex;
  height: ${height ? height : 'auto'};
  flex-direction: column;
  width:100%;
  border-radius:${borderRadius};
`
)
const CardWrapper = styled.div(
    ({ height, background, borderRadius }: User) => `
    // align-items: center;
    // justify-content: center;
    // display: flex;
    min-height: ${height};
    border-radius:${borderRadius};

    background: ${background};
`
)
const Profilecard = styled.div(
    ({ height, background, borderRadius }: User) => `
    align-items: center;
    justify-content: center;
    display: flex;
    min-height: ${height};
    border-radius:${borderRadius};
     position:relative;
    background: ${background};
`
)
const CoverWrapper = styled.div(
    ({ height, background, borderRadius }: User) => `
    padding-bottom: 10px;
    background-color: #fff;
   
`
)
const RoundImageWrapper = styled.div(
    ({ height, background, width, borderRadius }: User) => `
    position: absolute;
    width: ${width};
    height: ${height};
    bottom: -50px;
    border-radius: 50%;
    overflow: hidden;
    border: 4px solid #fff;
`
)


// const TomatoButton = styled(CustomButton)`
//   background: tomato;
// `



const Student: NextPage = (courseData) => {
    const [state, setState] = React.useState({
        top: false,
        left: false,
        bottom: false,
        right: false,
    });


    const [name, setname] = React.useState('');
    const [course, setCourse] = React.useState('');
    const [editOpen, seteEditOpen] = React.useState(false);
    const [open, setOpen] = React.useState(false);
    
    
    const handleClickOpen = () => {
      setOpen(true);
    };
  
    const handleClose = () => {
      setOpen(false);
    };
    const handleEditOpen = () => {
        seteEditOpen(true);
      };
    const handleEditClose = () => {
        seteEditOpen(false);
      };


    const handleChange = (event: SelectChangeEvent) => {
        setCourse(event.target.value as string);
    };

    return (
        <div className='bg-zinc-100' >
            {console.log(courseData)}
            <Head>
                <title>Create Next App</title>
                <meta name="description" content="Generated by create next app" />
                <link rel="icon" href="/favicon.ico" />
            </Head>


            <div className="container min-h-screen mx-auto">


                <CoverWrapper className="flex flex-col">
                    <div className="flex flex-row">
                        <div className="md:basis-full lg:basis-full h-80 relative">
                            <Image
                                layout="fill"
                                src="/ben-white-EMZxDosijJ4-unsplash.jpg"
                                alt="Picture of the author"
                                width="100%" height="100%" objectFit="cover"
                            // placeholder="blur"
                            />
                            <Profilecard height='100%'>
                                <RoundImageWrapper width='100px' height='100px'>
                                    <Image
                                        layout="fixed"
                                        src="/profile.jpg"
                                        alt="Picture of the author"
                                        // layout="fill"
                                        objectFit="cover"
                                        quality={100}
                                        width={100}
                                        height={100}
                                    // placeholder="blur"
                                    />
                                </RoundImageWrapper>
                            </Profilecard>
                        </div>
                    </div>
                    <div className="flex flex-row pt-14">
                        <div className="md:basis-2/6 lg:basis-2/6  relative">

                            <h2 className='text-3xl text-center '>Msc Computer Science</h2>

                            <p className='text-1xl text-center pt-2'>Experience 5 Years</p>
                            <p className='text-1xl text-center pt-2'>Availabile For: Group, One To One</p>
                        </div>
                        <div className="md:basis-2/6 lg:basis-2/6  relative">

                            <h2 className='text-3xl text-center '>Aakash Jain</h2>
                            <p className='text-1xl text-center pt-2'>Programmer</p>
                            <p className='text-1xl text-center pt-2'>5 Years</p>
                        </div>
                        <div className="md:basis-2/6 lg:basis-2/6  relative">
                            <p className='text-1xl  pt-2'>Find On</p>

                            <div className="flex flex-row py-2">
                                <FaLinkedin style={{ fontSize: 30 }} />
                                <FaFacebookSquare style={{ fontSize: 30 }} />
                                <FaInstagramSquare style={{ fontSize: 30 }} />
                                <FaTwitterSquare style={{ fontSize: 30 }} />
                            </div>

                            <CustomButton  type='button' width={'80%'} title='Connect'>{'right'}</CustomButton>
                        </div>
                    </div>
                
                    <div className="p-8">

                    <FormControl fullWidth>
<InputLabel id="demo-simple-select-label">Course</InputLabel>
<Select
    labelId="demo-simple-select-label"
    id="demo-simple-select"
    value={course}
    label="course"
    placeholder='course'
    onChange={handleChange}
  >
    <MenuItem value={10}>Ten</MenuItem>
    <MenuItem value={20}>Twenty</MenuItem>
    <MenuItem value={30}>Thirty</MenuItem>
  </Select>
  <Button>Add</Button>
      <div className="flex flex-row pt-14">
                    <FormControl fullWidth>
                    
                    <TextField id="outlined-basic" onChange={(v)=>setname(v.target.value)} label="Course Name" variant="outlined" />
  

                    </FormControl>
                    </div>
  <Button onClick={()=>{handleClickOpen()}}>Create</Button>
</FormControl>


    {courseData &&                
<ListCourses data={courseData.courseData}/>
}
    
   




                    </div>

                    {/* <div className="flex flex-row pt-14">
                    <EditCourseForm/>
                    </div> */}
                </CoverWrapper>



            </div>





            <footer className={styles.footer}>
                <a
                    href="https://vercel.com?utm_source=create-next-app&utm_medium=default-template&utm_campaign=create-next-app"
                    target="_blank"
                    rel="noopener noreferrer"
                >
                    Powered by{' '}
                    <span className={styles.logo}>
                        <Image src="/vercel.svg" alt="Vercel Logo" width={72} height={16} />
                    </span>
                </a>
            </footer>


        </div>
    )
}
export async function getStaticProps() {

 
    const courseDataRes = await fetch(`${process.env.NEXT_PUBLIC_API}/courses`)
    // const res = await fetch(`${process.env.NEXT_PUBLIC_API}/courses`)
    const courseData = await courseDataRes.json()
    console.log(courseData);
  
    if (!courseData) {
        return {
            notFound: true,
        }
    }

    return {
        props: { courseData }, // will be passed to the page component as props
    }
}
export default Student;